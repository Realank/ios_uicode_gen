{"version":3,"sources":["Widget/ColorPicker.js","Part/BasicConfigPart.js","Part/ImageViewConfigPart.js","Part/ButtonConfigPart.js","Part/ConstraintConfigPart.js","Part/TableViewConfigPart.js","Part/LabelConfigPart.js","Component/EditComponent.js","SimulateUI/UIButton.js","SimulateUI/UIView.js","SimulateUI/UILabel.js","Component/PreviewComponent.js","CodeGen/CodeGenerator.js","Component/SourceCodeComponent.js","App.js","serviceWorker.js","index.js"],"names":["Option","es_select","ColorPicker","props","_this","Object","classCallCheck","this","console","log","JSON","stringify","possibleConstructorReturn","getPrototypeOf","call","fetchData","value","state","datas","push","text","setState","data","handleChange","onChange","react_default","a","createElement","showSearch","initialValue","placeholder","notFoundContent","filterOption","defaultActiveFirstOption","showArrow","onFocus","onSearch","style","width","map","d","key","row","type","align","display","height","backgroundColor","marginRight","border","Component","BasicConfigPart","handleInputChange","id","e","target","checked","objectSpread","options","updateOptions","className","col","span","input","bind","name","superName","Widget_ColorPicker","input_number","min","max","precision","step","borderWidth","borderColor","borderRadius","connect","basicOptions","ImageViewConfigPart","image","hightLightedImage","imageViewOptions","ButtonConfigPart","tooltip","title","icon","titleColor","backgroundImage","buttonOptions","ConstraintConfigPart","es_checkbox","checkSelfWidth","offset","defaultValue","selfWidth","disabled","checkSelfHeight","selfHeight","checkSuperTop","checkSuperBottom","checkSuperLeft","checkSuperRight","checkSuperCenterX","checkSuperCenterY","checkSuperEqualWidth","checkSuperEqualHeight","constraintOptions","TableViewConfigPart","scrollEnabled","es_switch","defaultChecked","tableViewOptions","RadioButton","es_radio","Button","RadioGroup","Group","LabelConfigPart","textColor","undefined","fontSize","numberOfLines","labelOptions","EditComponent","handleViewChange","concat","updateView","optionList","supportedViews","option","EditComponent_Option","parts","selectedView","length","Part_BasicConfigPart","Part_ConstraintConfigPart","splice","Part_ButtonConfigPart","Part_ImageViewConfigPart","Part_TableViewConfigPart","Part_LabelConfigPart","optionFilterProp","children","toLowerCase","indexOf","updateBasicOptions","UIButton","borderStyle","color","UIView","UILabel","textAlign","justifyContent","PreviewComponent","widget","SimulateUI_UIButton","SimulateUI_UIView","SimulateUI_UILabel","validString","string","convertColor","replace","genBasicCode","indent","varName","code","genConstraintCode","genPositionConstraints","side","superTopOffset","superBottomOffset","superLeftOffset","superRightOffset","superCenterXOffset","superCenterYOffset","superEqualWidthOffset","superEqualHeightOffset","genCreateMethodHeader","widgetType","viewClass","activeLoad","genCreateMethodTail","localVarName","propertyName","SourceCodeComponent","handleSwitchChange","updateLoadMethod","SyntaxHighlighter","registerLanguage","objectivec","codeString","CodeGen","activeLoadCode","margin","marginLeft","checkedChildren","unCheckedChildren","light","language","github","showLineNumbers","wrapLines","Header","Footer","Content","Sider","persistedState","store","createStore","arguments","action","App","es","App_AppFrame","AppFrame","layout","minHeight","position","padding","Component_EditComponent","Component_PreviewComponent","Component_SourceCodeComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3da0a8f7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Select, Row } from 'antd'\n\nconst Option = Select.Option\n\nclass ColorPicker extends Component {\n  constructor (props) {\n    console.log('constructor color picker ' + JSON.stringify(props))\n    super(props)\n    this.state = {\n      data: []\n      // value: this.props.initialValue ? this.props.initialValue : []\n    }\n  }\n\n  fetchData = (value) => {\n    console.log('fetching data', value, JSON.stringify(this.state))\n    let datas = []\n    if (value) {\n      datas.push({ value: value, text: value })\n    }\n    datas.push(\n      { value: '#DBAC6F', text: '金色(#DBAC6F)' },\n      { value: '#FFFFFF', text: '白色(#FFFFFF)' },\n      { value: '#999999', text: '浅灰(#999999)' },\n      { value: '#666666', text: '深灰(#666666)' },\n      { value: '#333333', text: '深黑(#333333)' },\n      { value: '#307CFF', text: '蓝色(#307CFF)' }\n    )\n    this.setState({ data: datas })\n  }\n\n  handleChange = (value) => {\n    console.log('handle change' + JSON.stringify(value))\n    this.setState({\n      value,\n      data: []\n    })\n    if (this.props.onChange) {\n      this.props.onChange(value)\n    }\n  }\n\n  render () {\n    const { data } = this.state\n    return (\n      <Select\n        // mode='multiple'\n        // labelInValue\n        showSearch\n        value={this.props.initialValue}\n        placeholder='颜色'\n        notFoundContent={null}\n        filterOption={false}\n        defaultActiveFirstOption={false}\n        showArrow={false}\n        onFocus={this.fetchData}\n        onSearch={this.fetchData}\n        onChange={this.handleChange}\n        style={{ width: '100%' }}\n      >\n        {data.map((d) => {\n          return (<Option key={d.value} >\n            <Row type='flex' align={'middle'}>\n              <div style={{ display: 'inline-block', width: '20px', height: '20px', backgroundColor: d.value, marginRight: '10px', border: '#555 1px solid' }} />{d.text}\n            </Row>\n          </Option>)\n        })\n        }\n      </Select>\n    )\n  }\n}\n\nexport default ColorPicker\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { InputNumber, Row, Col, Input } from 'antd'\nimport ColorPicker from '../Widget/ColorPicker'\n\nclass BasicConfigPart extends Component {\n  handleInputChange = (id, e) => {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    this.handleChange(id, value)\n  }\n\n  handleChange = (id, value) => {\n    console.log('handleChange ' + id + ' ' + value)\n    let state = { ...this.props.options }\n    state[id] = value\n    this.props.updateOptions(state)\n  }\n\n  render () {\n    return (\n\n      <div className={'config'}>\n        <h3>通用配置</h3>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>变量名</h5>\n          </Col>\n          <Col span={6}>\n            <Input placeholder='变量名' onChange={this.handleInputChange.bind(this, 'name')} value={this.props.options.name} />\n          </Col >\n          <Col span={1} />\n          <Col span={4}>\n            <h5>父视图名称</h5>\n          </Col>\n          <Col span={6}>\n            <Input placeholder='变量名' onChange={this.handleInputChange.bind(this, 'superName')} value={this.props.options.superName} />\n          </Col >\n        </Row>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>背景颜色</h5>\n          </Col>\n          <Col span={8}>\n            <ColorPicker initialValue={this.props.options.backgroundColor} onChange={this.handleChange.bind(this, 'backgroundColor')} />\n          </Col >\n\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>边框宽度</h5>\n          </Col>\n          <Col span={5}>\n            <InputNumber min={0} max={30} precision={1} step={0.5} value={this.props.options.borderWidth ? this.props.options.borderWidth : 0} onChange={this.handleChange.bind(this, 'borderWidth')} />\n          </Col >\n          <Col span={2} />\n          <Col span={4}>\n            <h5>边框颜色</h5>\n          </Col>\n          <Col span={8}>\n            <ColorPicker initialValue={this.props.options.borderColor} onChange={this.handleChange.bind(this, 'borderColor')} />\n          </Col >\n\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>圆角半径</h5>\n          </Col>\n          <Col span={8}>\n            <InputNumber min={0} max={30} value={this.props.options.borderRadius ? this.props.options.borderRadius : 0} onChange={this.handleChange.bind(this, 'borderRadius')} />\n          </Col >\n          <Col span={8} />\n\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { options: state.basicOptions }\n}\n\nconst mapDispatchToProps = {\n  updateOptions: (value) => ({\n    type: 'UpdateBasic',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicConfigPart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col, Input } from 'antd'\n\nclass ImageViewConfigPart extends Component {\n  handleInputChange = (id, e) => {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    this.handleChange(id, value)\n  }\n\n  handleChange = (id, value) => {\n    console.log('handleChange ' + id + ' ' + value)\n    let state = { ...this.props.options }\n    state[id] = value\n    this.props.updateOptions(state)\n  }\n\n  render () {\n    return (\n\n      <div className={'config'}>\n        <h3 >UIImageView配置</h3>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>前景图片</h5>\n          </Col>\n          <Col span={6}>\n            <Input placeholder='图片名' onChange={this.handleInputChange.bind(this, 'image')} value={this.props.options.image} />\n          </Col >\n          <Col span={1} />\n          <Col span={4}>\n            <h5>高亮图片</h5>\n          </Col>\n          <Col span={6}>\n            <Input placeholder='图片名' onChange={this.handleInputChange.bind(this, 'hightLightedImage')} value={this.props.options.hightLightedImage} />\n          </Col >\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { options: state.imageViewOptions }\n}\n\nconst mapDispatchToProps = {\n  updateOptions: (value) => ({\n    type: 'UpdateImageView',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageViewConfigPart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col, Input, Tooltip, Icon } from 'antd'\nimport ColorPicker from '../Widget/ColorPicker'\n\nclass ButtonConfigPart extends Component {\n  handleInputChange = (id, e) => {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    this.handleChange(id, value)\n  }\n\n  handleChange = (id, value) => {\n    console.log('handleChange ' + id + ' ' + value)\n    let state = { ...this.props.options }\n    state[id] = value\n    this.props.updateOptions(state)\n  }\n\n  render () {\n    return (\n\n      <div className={'config'}>\n        <h3 style={{ display: 'inline' }}>UIButton配置</h3><Tooltip title={'只配置Normal状态下的内容，其他状态自行添加'}> <Icon type='question-circle' /></Tooltip>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>标题</h5>\n\n          </Col>\n          <Col span={5}>\n            <Input placeholder='标题内容' onChange={this.handleInputChange.bind(this, 'title')} value={this.props.options.title} />\n          </Col >\n          <Col span={2} />\n          <Col span={4}>\n            <h5>标题颜色</h5>\n          </Col>\n          <Col span={8}>\n            <ColorPicker initialValue={this.props.options.titleColor} onChange={this.handleChange.bind(this, 'titleColor')} />\n          </Col >\n\n        </Row>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>前景图片</h5>\n          </Col>\n          <Col span={6}>\n            <Input placeholder='图片名' onChange={this.handleInputChange.bind(this, 'image')} value={this.props.options.image} />\n          </Col >\n          <Col span={1} />\n          <Col span={4}>\n            <h5>背景图片</h5>\n          </Col>\n          <Col span={6}>\n            <Input placeholder='图片名' onChange={this.handleInputChange.bind(this, 'backgroundImage')} value={this.props.options.backgroundImage} />\n          </Col >\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { options: state.buttonOptions }\n}\n\nconst mapDispatchToProps = {\n  updateOptions: (value) => ({\n    type: 'UpdateButton',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonConfigPart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { InputNumber, Row, Col, Checkbox } from 'antd'\n\nclass ConstraintConfigPart extends Component {\n  handleInputChange = (id, e) => {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    this.handleChange(id, value)\n  }\n\n  handleChange = (id, value) => {\n    console.log('handleChange ' + id + ' ' + value)\n    let state = { ...this.props.options }\n    state[id] = value\n    this.props.updateOptions(state)\n  }\n\n  render () {\n    return (\n\n      <div className={'config'}>\n        <h3>约束配置</h3>\n        <h4>自我约束</h4>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSelfWidth} onChange={this.handleInputChange.bind(this, 'checkSelfWidth')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>宽度</h5>\n          </Col>\n          <Col offset={1}>\n            <InputNumber\n              min={0}\n              max={300}\n              defaultValue={this.props.options.selfWidth}\n              onChange={this.handleChange.bind(this, 'selfWidth')}\n              disabled={!this.props.options.checkSelfWidth} />\n          </Col >\n        </Row>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSelfHeight} onChange={this.handleInputChange.bind(this, 'checkSelfHeight')} />\n          </Col>\n          <Col offset={1}>\n            <h5>高度</h5>\n          </Col>\n          <Col offset={1}>\n            <InputNumber\n              min={0}\n              max={300}\n              defaultValue={this.props.options.selfHeight}\n              onChange={this.handleChange.bind(this, 'selfHeight')}\n              disabled={!this.props.options.checkSelfHeight} />\n          </Col >\n        </Row>\n\n        <h4>与父视图约束</h4>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperTop} onChange={this.handleInputChange.bind(this, 'checkSuperTop')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>顶部约束</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superTopOffset')} disabled={!this.props.options.checkSuperTop} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperBottom} onChange={this.handleInputChange.bind(this, 'checkSuperBottom')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>底部约束</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superBottomOffset')} disabled={!this.props.options.checkSuperBottom} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperLeft} onChange={this.handleInputChange.bind(this, 'checkSuperLeft')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>左侧约束</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superLeftOffset')} disabled={!this.props.options.checkSuperLeft} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperRight} onChange={this.handleInputChange.bind(this, 'checkSuperRight')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>右侧约束</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superRightOffset')} disabled={!this.props.options.checkSuperRight} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperCenterX} onChange={this.handleInputChange.bind(this, 'checkSuperCenterX')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>水平居中</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superCenterXOffset')} disabled={!this.props.options.checkSuperCenterX} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperCenterY} onChange={this.handleInputChange.bind(this, 'checkSuperCenterY')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>垂直居中</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superCenterYOffset')} disabled={!this.props.options.checkSuperCenterY} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperEqualWidth} onChange={this.handleInputChange.bind(this, 'checkSuperEqualWidth')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>等&emsp;&emsp;宽</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superEqualWidthOffset')} disabled={!this.props.options.checkSuperEqualWidth} />\n          </Col >\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col>\n            <Checkbox checked={this.props.options.checkSuperEqualHeight} onChange={this.handleInputChange.bind(this, 'checkSuperEqualHeight')} />\n          </Col>\n\n          <Col offset={1}>\n            <h5>等&emsp;&emsp;高</h5>\n          </Col>\n          <Col offset={1}>\n            <h5>偏移</h5>\n          </Col>\n          <Col span={7}>\n            <InputNumber min={-300} max={300} defaultValue={0} onChange={this.handleChange.bind(this, 'superEqualHeightOffset')} disabled={!this.props.options.checkSuperEqualHeight} />\n          </Col >\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { options: state.constraintOptions }\n}\n\nconst mapDispatchToProps = {\n  updateOptions: (value) => ({\n    type: 'UpdateConstraint',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConstraintConfigPart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col, Switch } from 'antd'\n\nclass TableViewConfigPart extends Component {\n  handleChange = (id, value) => {\n    console.log('handleChange ' + id + ' ' + value)\n    let state = { ...this.props.options }\n    state[id] = value\n    this.props.updateOptions(state)\n  }\n\n  render () {\n    const scrollEnabled = this.props.options.scrollEnabled\n    return (\n\n      <div className={'config'}>\n        <h3 >UITableView配置</h3>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>可以滚动</h5>\n          </Col>\n          <Col span={6}>\n            <Switch onChange={this.handleChange.bind(this, 'scrollEnabled')} defaultChecked={scrollEnabled} />\n          </Col >\n\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { options: state.tableViewOptions }\n}\n\nconst mapDispatchToProps = {\n  updateOptions: (value) => ({\n    type: 'UpdateTableView',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableViewConfigPart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col, Input, InputNumber, Radio } from 'antd'\nimport ColorPicker from '../Widget/ColorPicker'\nconst RadioButton = Radio.Button\nconst RadioGroup = Radio.Group\n\nclass LabelConfigPart extends Component {\n  handleInputChange = (id, e) => {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    this.handleChange(id, value)\n  }\n  handleChange = (id, value) => {\n    console.log('handleChange ' + id + ' ' + value)\n    let state = { ...this.props.options }\n    state[id] = value\n    this.props.updateOptions(state)\n  }\n\n  render () {\n    return (\n\n      <div className={'config'}>\n        <h3 >UILabel配置</h3>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>文字</h5>\n\n          </Col>\n          <Col span={5}>\n            <Input placeholder='文字内容' onChange={this.handleInputChange.bind(this, 'text')} value={this.props.options.text} />\n          </Col >\n          <Col span={2} />\n          <Col span={4}>\n            <h5>文字颜色</h5>\n          </Col>\n          <Col span={8}>\n            <ColorPicker initialValue={this.props.options.textColor} onChange={this.handleChange.bind(this, 'textColor')} />\n          </Col >\n\n        </Row>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>字体大小</h5>\n          </Col>\n          <Col span={8}>\n            <InputNumber min={1} max={100} value={this.props.options.fontSize !== undefined ? this.props.options.fontSize : 17} onChange={this.handleChange.bind(this, 'fontSize')} />\n          </Col >\n          <Col span={8} />\n\n        </Row>\n\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>行数</h5>\n          </Col>\n          <Col span={8}>\n            <InputNumber min={0} max={10} value={this.props.options.numberOfLines} onChange={this.handleChange.bind(this, 'numberOfLines')} />\n          </Col >\n          <Col span={8} />\n\n        </Row>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Col span={4}>\n            <h5>对齐方式</h5>\n          </Col>\n          <Col >\n            <RadioGroup onChange={this.handleInputChange.bind(this, 'textAlign')}>\n              <RadioButton value='NSTextAlignmentLeft'>Left</RadioButton>\n              <RadioButton value='NSTextAlignmentCenter'>Center</RadioButton>\n              <RadioButton value='NSTextAlignmentRight'>Right</RadioButton>\n              <RadioButton value='NSTextAlignmentJustified'>Justified</RadioButton>\n              <RadioButton value='NSTextAlignmentNatural'>Natural</RadioButton>\n            </RadioGroup>\n          </Col >\n\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { options: state.labelOptions }\n}\n\nconst mapDispatchToProps = {\n  updateOptions: (value) => ({\n    type: 'UpdateLabel',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelConfigPart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Select, Row } from 'antd'\nimport BasicConfigPart from '../Part/BasicConfigPart'\nimport ImageViewConfigPart from '../Part/ImageViewConfigPart'\nimport ButtonConfigPart from '../Part/ButtonConfigPart'\nimport ConstraintConfigPart from '../Part/ConstraintConfigPart'\nimport TableViewConfigPart from '../Part/TableViewConfigPart'\nimport LabelConfigPart from '../Part/LabelConfigPart'\nconst Option = Select.Option\n\nclass EditComponent extends Component {\n  handleViewChange = (value) => {\n    console.log(`selected ${value}`)\n    this.props.updateView(value)\n  }\n\n  render () {\n    const optionList = this.props.supportedViews.map((option) => {\n      return <Option value={option} key={option} >{option}</Option>\n    })\n    console.log('render ' + JSON.stringify(this.props))\n    let parts = []\n    if (this.props.selectedView && this.props.selectedView.length) {\n      parts.push(<BasicConfigPart key={'BasicConfigPart'} />, <ConstraintConfigPart key={'ConstraintConfigPart'} />)\n    }\n    if (this.props.selectedView === 'UIButton') {\n      parts.splice(1, 0, <ButtonConfigPart key={'ButtonConfigPart'} />)// 插入\n    } else if (this.props.selectedView === 'UIImageView') {\n      parts.splice(1, 0, <ImageViewConfigPart key={'ImageViewConfigPart'} />)// 插入\n    } else if (this.props.selectedView === 'UITableView') {\n      parts.splice(1, 0, <TableViewConfigPart key={'TableViewConfigPart'} />)// 插入\n    } else if (this.props.selectedView === 'UILabel') {\n      parts.splice(1, 0, <LabelConfigPart key={'LabelConfigPart'} />)// 插入\n    }\n    return (\n      <div>\n        <h1>编辑</h1>\n        <Row className={'row'} type='flex' align={'middle'}>\n          <Select\n            showSearch\n            value={this.props.selectedView.length ? this.props.selectedView : undefined}\n            style={{ width: 200 }}\n            placeholder='选择一个控件'\n            optionFilterProp='children'\n            onChange={this.handleViewChange}\n            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            {optionList}\n          </Select>\n        </Row>\n        {parts}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { selectedView: state.selectedView, supportedViews: state.supportedViews }\n}\n\nconst mapDispatchToProps = {\n  updateView: (value) => ({\n    type: 'UpdateView',\n    value\n  }),\n  updateBasicOptions: (value) => ({\n    type: 'UpdateBasic',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditComponent)\n","import React, { Component } from 'react'\n\nclass UIButton extends Component {\n  render () {\n    const basicOptions = this.props.basicOptions\n    const buttonOptions = this.props.buttonOptions\n    const constraintOptions = this.props.constraintOptions\n    let style = {\n      backgroundColor: basicOptions.backgroundColor,\n      borderWidth: basicOptions.borderWidth + 'px',\n      borderColor: basicOptions.borderColor,\n      borderStyle: 'solid',\n      borderRadius: basicOptions.borderRadius + 'px'\n    }\n    if (buttonOptions.titleColor) {\n      style.color = buttonOptions.titleColor\n    }\n    if (constraintOptions.checkSelfWidth && constraintOptions.selfWidth > 0) {\n      style.width = constraintOptions.selfWidth\n    }\n    if (constraintOptions.checkSelfHeight && constraintOptions.selfHeight > 0) {\n      style.height = constraintOptions.selfHeight\n    }\n\n    return (\n      <div className={'UIButton'} style={style}>{buttonOptions.title ? buttonOptions.title : 'Button'}</div>\n    )\n  }\n}\n\nexport default UIButton\n","import React, { Component } from 'react'\n\nclass UIView extends Component {\n  render () {\n    const basicOptions = this.props.basicOptions\n    const constraintOptions = this.props.constraintOptions\n    let style = {\n      backgroundColor: basicOptions.backgroundColor,\n      borderWidth: basicOptions.borderWidth + 'px',\n      borderColor: basicOptions.borderColor,\n      borderStyle: 'solid',\n      borderRadius: basicOptions.borderRadius + 'px'\n    }\n    if (constraintOptions.checkSelfWidth && constraintOptions.selfWidth > 0) {\n      style.width = constraintOptions.selfWidth\n    }\n    if (constraintOptions.checkSelfHeight && constraintOptions.selfHeight > 0) {\n      style.height = constraintOptions.selfHeight\n    }\n    return (\n      <div className={'UIView'} style={style} >{this.props.name ? this.props.name : 'View'}</div>\n    )\n  }\n}\n\nexport default UIView\n","import React, { Component } from 'react'\n\nclass UILabel extends Component {\n  render () {\n    const basicOptions = this.props.basicOptions\n    const labelOptions = this.props.labelOptions\n    const constraintOptions = this.props.constraintOptions\n    let style = {\n      backgroundColor: basicOptions.backgroundColor,\n      borderWidth: basicOptions.borderWidth + 'px',\n      borderColor: basicOptions.borderColor,\n      borderStyle: 'solid',\n      borderRadius: basicOptions.borderRadius + 'px'\n    }\n\n    if (labelOptions.textColor) {\n      style.color = labelOptions.textColor\n    }\n\n    if (labelOptions.fontSize) {\n      style.fontSize = labelOptions.fontSize\n    }\n\n    if (labelOptions.textAlign === 'NSTextAlignmentLeft') {\n      style.justifyContent = 'flex-start'\n    } else if (labelOptions.textAlign === 'NSTextAlignmentCenter' || labelOptions.textAlign === 'NSTextAlignmentJustified' || labelOptions.textAlign === 'NSTextAlignmentNatural') {\n      style.justifyContent = 'center'\n    } else if (labelOptions.textAlign === 'NSTextAlignmentRight') {\n      style.justifyContent = 'flex-end'\n    }\n\n    if (constraintOptions.checkSelfWidth && constraintOptions.selfWidth > 0) {\n      style.width = constraintOptions.selfWidth\n    }\n    if (constraintOptions.checkSelfHeight && constraintOptions.selfHeight > 0) {\n      style.height = constraintOptions.selfHeight\n    }\n\n    return (\n      <div className={'UILabel'} style={style}>{labelOptions.text ? labelOptions.text : 'Label'}</div>\n    )\n  }\n}\n\nexport default UILabel\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tooltip, Icon } from 'antd'\nimport UIButton from '../SimulateUI/UIButton'\nimport UIView from '../SimulateUI/UIView'\nimport UILabel from '../SimulateUI/UILabel'\nclass PreviewComponent extends Component {\n  render () {\n    let widget = null\n    if (this.props.selectedView === 'UIButton') {\n      widget = <UIButton basicOptions={this.props.basicOptions} buttonOptions={this.props.buttonOptions} constraintOptions={this.props.constraintOptions} />\n    } else if (this.props.selectedView === 'UIView') {\n      widget = <UIView basicOptions={this.props.basicOptions} constraintOptions={this.props.constraintOptions} />\n    } else if (this.props.selectedView === 'UIImageView') {\n      widget = <UIView basicOptions={this.props.basicOptions} constraintOptions={this.props.constraintOptions} name={'ImageView'} />\n    } else if (this.props.selectedView === 'UITableView') {\n      widget = <UIView basicOptions={this.props.basicOptions} constraintOptions={this.props.constraintOptions} name={'TableView'} />\n    } else if (this.props.selectedView === 'UILabel') {\n      widget = <UILabel basicOptions={this.props.basicOptions} labelOptions={this.props.labelOptions} constraintOptions={this.props.constraintOptions} />\n    }\n    return (\n      <div className={'preview'}>\n        <h1 style={{ display: 'inline' }}>预览</h1>\n        <Tooltip title={'只能预览大致效果，请以实际代码效果为准'}> <Icon type='question-circle' /></Tooltip>\n        <div className={'renderPreview'}>\n          {widget}\n          {/* <div style={{ wordWrap: 'break-word' }}> */}\n          {/* {JSON.stringify(this.props)} */}\n          {/* </div> */}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nexport default connect(mapStateToProps)(PreviewComponent)\n","\nfunction validString (string) {\n  return string && string.length\n}\nfunction convertColor (color) {\n  return color.replace('#', '0x')\n}\n\nfunction genBasicCode (indent, varName, basicOptions) {\n  let code = ''\n  if (validString(basicOptions.backgroundColor)) {\n    code +=\n      `\n    ${indent}${varName}.backgroundColor = UIColorFromRGB(${convertColor(basicOptions.backgroundColor)});`\n  }\n  if (basicOptions.borderWidth > 0) {\n    code +=\n      `\n    ${indent}${varName}.layer.borderWidth = RELATIVEVALUE(${basicOptions.borderWidth});`\n  }\n  if (validString(basicOptions.borderColor)) {\n    code +=\n      `\n    ${indent}${varName}.layer.borderColor = UIColorFromRGB(${convertColor(basicOptions.borderColor)}).CGColor;`\n  }\n  if (basicOptions.borderRadius > 0) {\n    code +=\n      `\n    ${indent}${varName}.layer.cornerRadius = RELATIVEVALUE(${basicOptions.borderRadius});`\n  }\n  return code\n}\n\nfunction genConstraintCode (type, varName, superName, constraintOptions) {\n  let code =\n    `- (void)update${type}Constraints {\n    __weak __typeof(self) weakSelf = self;\n    [self.${varName} mas_remakeConstraints:^(MASConstraintMaker *make) {`\n\n  // self constraints\n  if (constraintOptions.checkSelfWidth) {\n    code +=\n      `\n        make.width.mas_equalTo(RELATIVEVALUE(${constraintOptions.selfWidth}));`\n  }\n  if (constraintOptions.checkSelfHeight) {\n    code +=\n      `\n        make.height.mas_equalTo(RELATIVEVALUE(${constraintOptions.selfHeight}));`\n  }\n  // super constraints\n  function genPositionConstraints (side, offset) {\n    let code = `\n        make.${side}.equalTo(weakSelf.${superName}.mas_${side})`\n    if (offset) {\n      code += `.offset(RELATIVEVALUE(${offset}))`\n    }\n    code += ';'\n    return code\n  }\n  code += '\\n'\n  if (constraintOptions.checkSuperTop) {\n    code += genPositionConstraints('top', constraintOptions.superTopOffset)\n  }\n  if (constraintOptions.checkSuperBottom) {\n    code += genPositionConstraints('bottom', constraintOptions.superBottomOffset)\n  }\n  if (constraintOptions.checkSuperLeft) {\n    code += genPositionConstraints('left', constraintOptions.superLeftOffset)\n  }\n  if (constraintOptions.checkSuperRight) {\n    code += genPositionConstraints('right', constraintOptions.superRightOffset)\n  }\n  if (constraintOptions.checkSuperCenterX) {\n    code += genPositionConstraints('centerX', constraintOptions.superCenterXOffset)\n  }\n  if (constraintOptions.checkSuperCenterY) {\n    code += genPositionConstraints('centerY', constraintOptions.superCenterYOffset)\n  }\n  if (constraintOptions.checkSuperEqualWidth) {\n    code += genPositionConstraints('width', constraintOptions.superEqualWidthOffset)\n  }\n  if (constraintOptions.checkSuperEqualHeight) {\n    code += genPositionConstraints('height', constraintOptions.superEqualHeightOffset)\n  }\n\n  code +=\n    `\n    }];\n}`\n  return code\n}\n\nfunction genCreateMethodHeader (widgetType, viewClass, name, activeLoad) {\n  let code = `@property (nonatomic, strong) ${viewClass} *${name};\\n\\n`\n  if (activeLoad) {\n    code += `- (void)create${widgetType} {`\n  } else {\n    code += `- (${viewClass} *)${name} {\n    if (!_${name}) {`\n  }\n  return code\n}\n\nfunction genCreateMethodTail (superName, localVarName, propertyName, activeLoad) {\n  let code = '\\n'\n  if (activeLoad) {\n    code += `\n    [self.${superName} addSubview:${localVarName}];\n    _${propertyName} = ${localVarName};\n}`\n  } else {\n    code += `\n        _${propertyName} = ${localVarName};\n    }\n    return _${propertyName};\n}`\n  }\n  return code\n}\n\nfunction genCustomViewCode (viewClass, basicOptions, constraintOptions, activeLoad) {\n  // method body and init method\n  const localVarName = 'view'\n  const widgetType = 'CustomView'\n  const propertyName = validString(basicOptions.name) ? basicOptions.name : viewClass.toLowerCase()\n  const superName = validString(basicOptions.superName) ? basicOptions.superName : 'view'\n  let indent = activeLoad ? '' : '    '\n  let code = genCreateMethodHeader(widgetType, viewClass, propertyName, activeLoad)\n\n  code += `\n    ${indent}UIView *${localVarName} = [[UIView alloc] init];`\n\n  // basic code\n  code += genBasicCode(indent, localVarName, basicOptions)\n\n  // tail code\n  code += genCreateMethodTail(superName, localVarName, propertyName, activeLoad)\n\n  // constraint code\n  code += '\\n\\n'\n  code += genConstraintCode(widgetType, propertyName, superName, constraintOptions)\n\n  return code\n}\n\nfunction genButtonCode (viewClass, basicOptions, buttonOptions, constraintOptions, activeLoad) {\n  // method body and init method\n  const localVarName = 'button'\n  const widgetType = 'Button'\n  const propertyName = validString(basicOptions.name) ? basicOptions.name : viewClass.toLowerCase()\n  const superName = validString(basicOptions.superName) ? basicOptions.superName : 'view'\n  let indent = activeLoad ? '' : '    '\n  let code = genCreateMethodHeader(widgetType, viewClass, propertyName, activeLoad)\n\n  code += `\n    ${indent}UIButton* ${localVarName} = [UIButton buttonWithType:UIButtonTypeCustom];`\n\n  // basic code\n  code += genBasicCode(indent, localVarName, basicOptions)\n\n  // unique code\n  code += '\\n'\n  if (validString(buttonOptions.title)) {\n    code +=\n      `\n    ${indent}[${localVarName} setTitle:@\"${buttonOptions.title}\" forState:UIControlStateNormal];`\n  }\n  if (validString(buttonOptions.titleColor)) {\n    code +=\n      `\n    ${indent}[${localVarName} setTitleColor:UIColorFromRGB(${convertColor(buttonOptions.titleColor)}) forState:UIControlStateNormal];`\n  }\n  if (validString(buttonOptions.image)) {\n    code +=\n      `\n    ${indent}UIImage *image = [UIImage imageNamed:@\"${buttonOptions.image}\"];\n    ${indent}[${localVarName} setImage:image forState:UIControlStateNormal];`\n  }\n  if (validString(buttonOptions.title) && validString(buttonOptions.image)) {\n    code +=\n      `\n    ${indent}//[${localVarName} setImageEdgeInsets:UIEdgeInsetsMake(0, -7, 0, 0)];\n    ${indent}//[${localVarName} setTitleEdgeInsets:UIEdgeInsetsMake(0, 0, 0, -7)];`\n  }\n  if (validString(buttonOptions.backgroundImage)) {\n    code +=\n      `\n    ${indent}UIImage *bgImage = [UIImage imageNamed:@\"${buttonOptions.backgroundImage}\"];\n    ${indent}[${localVarName} setBackgroundImage:bgImage forState:UIControlStateNormal];`\n  }\n\n  // tail code\n  code += genCreateMethodTail(superName, localVarName, propertyName, activeLoad)\n\n  // constraint code\n  code += '\\n\\n'\n  code += genConstraintCode(widgetType, propertyName, superName, constraintOptions)\n\n  return code\n}\n\nfunction genImageViewCode (viewClass, basicOptions, imageViewOptions, constraintOptions, activeLoad) {\n  // method body and init method\n  const localVarName = 'imageView'\n  const widgetType = 'ImageView'\n  const propertyName = validString(basicOptions.name) ? basicOptions.name : viewClass.toLowerCase()\n  const superName = validString(basicOptions.superName) ? basicOptions.superName : 'view'\n  let indent = activeLoad ? '' : '    '\n  let code = genCreateMethodHeader(widgetType, viewClass, propertyName, activeLoad)\n  code += `\n    ${indent}UIImageView *${localVarName} = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@\"${imageViewOptions.image}\"]];`\n  // basic code\n  code += genBasicCode(indent, localVarName, basicOptions)\n  // unique code\n  if (imageViewOptions.hightLightedImage) {\n    code +=\n      `\n    ${indent}${localVarName}.highlightedImage = [UIImage imageNamed:@\"${imageViewOptions.hightLightedImage}\"];`\n  }\n  // tail code\n  code += genCreateMethodTail(superName, localVarName, propertyName, activeLoad)\n\n  // constraint code\n  code += '\\n\\n'\n  code += genConstraintCode(widgetType, propertyName, superName, constraintOptions)\n\n  return code\n}\n\nfunction genTableViewCode (viewClass, basicOptions, tableViewOptions, constraintOptions, activeLoad) {\n  // method body and init method\n  const localVarName = 'tableView'\n  const widgetType = 'TableView'\n  const propertyName = validString(basicOptions.name) ? basicOptions.name : viewClass.toLowerCase()\n  const superName = validString(basicOptions.superName) ? basicOptions.superName : 'view'\n  let indent = activeLoad ? '' : '    '\n  let code = genCreateMethodHeader(widgetType, viewClass, propertyName, activeLoad)\n\n  code += `\n    ${indent}UITableView *${localVarName} = [[UIView alloc] init];`\n\n  // basic code\n  code += genBasicCode(indent, localVarName, basicOptions)\n\n  // unique code\n  code += '\\n'\n  code +=\n    `\n    ${indent}${localVarName}.delegate = self;\n    ${indent}${localVarName}.dataSource = self;\n    ${indent}${localVarName}.separatorStyle = UITableViewCellSeparatorStyleNone;\n    ${indent}${localVarName}.allowsSelection = NO;`\n  if (tableViewOptions.scrollEnabled) {\n    code += `\n    ${indent}${localVarName}.scrollEnabled = YES;`\n  } else {\n    code += `\n    ${indent}${localVarName}.scrollEnabled = NO;`\n  }\n  // tail code\n  code += genCreateMethodTail(superName, localVarName, propertyName, activeLoad)\n\n  // constraint code\n  code += '\\n\\n'\n  code += genConstraintCode(widgetType, propertyName, superName, constraintOptions)\n\n  return code\n}\n\nfunction genLabelCode (viewClass, basicOptions, labelOptions, constraintOptions, activeLoad) {\n  // method body and init method\n  const localVarName = 'label'\n  const widgetType = 'Label'\n  const propertyName = validString(basicOptions.name) ? basicOptions.name : viewClass.toLowerCase()\n  const superName = validString(basicOptions.superName) ? basicOptions.superName : 'view'\n  let indent = activeLoad ? '' : '    '\n  let code = genCreateMethodHeader(widgetType, viewClass, propertyName, activeLoad)\n\n  code += `\n    ${indent}UILabel *${localVarName} = [[UILabel alloc] init];`\n\n  // basic code\n  code += genBasicCode(indent, localVarName, basicOptions)\n\n  // unique code\n\n  code += '\\n'\n  code +=\n    `\n    ${indent}${localVarName}.text = @\"${labelOptions.text}\";`\n  if (validString(labelOptions.textColor)) {\n    code +=\n      `\n    ${indent}${localVarName}.textColor = UIColorFromRGB(${convertColor(labelOptions.textColor)});`\n  }\n  if (labelOptions.fontSize) {\n    code +=\n      `\n    ${indent}${localVarName}.font = UCAR_FONT_SIZE(${labelOptions.fontSize});`\n  }\n  if (labelOptions.numberOfLines !== undefined) {\n    code +=\n      `\n    ${indent}${localVarName}.numberOfLines = ${labelOptions.numberOfLines};`\n  }\n  if (validString(labelOptions.textAlign)) {\n    code +=\n      `\n    ${indent}${localVarName}.textAlignment = ${labelOptions.textAlign};`\n  }\n  // tail code\n  code += genCreateMethodTail(superName, localVarName, propertyName, activeLoad)\n\n  // constraint code\n  code += '\\n\\n'\n  code += genConstraintCode(widgetType, propertyName, superName, constraintOptions)\n\n  return code\n}\n\nexport { genButtonCode, genCustomViewCode, genImageViewCode, genTableViewCode, genLabelCode }\n","import React, { Component } from 'react'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport objectivec from 'react-syntax-highlighter/dist/languages/hljs/objectivec'\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github'\nimport { connect } from 'react-redux'\nimport { Switch, Row } from 'antd'\nimport * as CodeGen from '../CodeGen/CodeGenerator'\nclass SourceCodeComponent extends Component {\n  constructor (props) {\n    super(props)\n    SyntaxHighlighter.registerLanguage('objectivec', objectivec)\n  }\n  handleSwitchChange = (checked) => {\n    console.log('handleSwitchChange ' + checked)\n    this.props.updateLoadMethod(checked)\n  }\n  render () {\n    let codeString = ''\n    switch (this.props.selectedView) {\n      case 'UIView':\n        codeString = CodeGen.genCustomViewCode(this.props.selectedView, this.props.basicOptions, this.props.constraintOptions, this.props.activeLoadCode)\n        break\n      case 'UIButton':\n        codeString = CodeGen.genButtonCode(this.props.selectedView, this.props.basicOptions, this.props.buttonOptions, this.props.constraintOptions, this.props.activeLoadCode)\n        break\n      case 'UIImageView':\n        codeString = CodeGen.genImageViewCode(this.props.selectedView, this.props.basicOptions, this.props.imageViewOptions, this.props.constraintOptions, this.props.activeLoadCode)\n        break\n      case 'UITableView':\n        codeString = CodeGen.genTableViewCode(this.props.selectedView, this.props.basicOptions, this.props.tableViewOptions, this.props.constraintOptions, this.props.activeLoadCode)\n        break\n      case 'UILabel':\n        codeString = CodeGen.genLabelCode(this.props.selectedView, this.props.basicOptions, this.props.labelOptions, this.props.constraintOptions, this.props.activeLoadCode)\n        break\n      default:\n        break\n    }\n\n    return (\n      <div className={'codeShow'}>\n        <Row type='flex' align={'middle'}>\n          <h1 style={{ display: 'inline-block', margin: '0' }}>源码</h1>\n          <div style={{ marginLeft: '10px' }}><Switch style={{ width: '90px' }} onChange={this.handleSwitchChange} checkedChildren='主动加载' unCheckedChildren='懒加载' defaultChecked={this.props.activeLoadCode} /></div>\n        </Row>\n\n        <SyntaxHighlighter className={'sourceCode'} language='objectivec' style={github} showLineNumbers wrapLines>{codeString}</SyntaxHighlighter>\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = {\n  updateLoadMethod: (value) => ({\n    type: 'UpdateLoadMethod',\n    value\n  })\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SourceCodeComponent)\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { Layout } from 'antd'\nimport './App.css'\nimport EditComponent from './Component/EditComponent'\nimport PreviewComponent from './Component/PreviewComponent'\nimport SourceCodeComponent from './Component/SourceCodeComponent'\nconst { Header, Footer, Content, Sider } = Layout\n\nconst persistedState = {\n  selectedView: '',\n  supportedViews: ['UIView', 'UIButton', 'UIImageView', 'UITableView', 'UILabel'],\n  basicOptions: {\n    superName: 'view'\n  },\n  buttonOptions: {\n    title: 'button'\n  },\n  imageViewOptions: {\n\n  },\n  constraintOptions: {\n    selfWidth: 50,\n    selfHeight: 30\n  },\n  tableViewOptions: {\n    scrollEnabled: true\n  },\n  labelOptions: {\n    text: 'Label',\n    fontSize: 17\n  },\n  activeLoadCode: true\n}\n\nconst reducer = (state = persistedState, action) => {\n  console.log('action:' + JSON.stringify(action))\n  switch (action.type) {\n    case 'UpdateView':\n      return { ...persistedState, selectedView: action.value, basicOptions: { ...persistedState.basicOptions, name: action.value.toLowerCase() }, activeLoadCode: state.activeLoadCode }\n    case 'UpdateBasic':\n      return { ...state, basicOptions: action.value }\n    case 'UpdateButton':\n      return { ...state, buttonOptions: action.value }\n    case 'UpdateConstraint':\n      return { ...state, constraintOptions: action.value }\n    case 'UpdateImageView':\n      return { ...state, imageViewOptions: action.value }\n    case 'UpdateTableView':\n      return { ...state, tableViewOptions: action.value }\n    case 'UpdateLabel':\n      return { ...state, labelOptions: action.value }\n    case 'UpdateLoadMethod':\n      return { ...state, activeLoadCode: action.value }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(\n  reducer\n)\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <AppFrame />\n      </Provider>\n\n    )\n  }\n}\n\nclass AppFrame extends Component {\n  render () {\n    return (\n      <Layout style={{ minHeight: '100%', width: '100%', position: 'absolute' }}>\n\n        <Sider width={'5%'} />\n\n        <Layout >\n          <Header className='navigator' style={{ padding: '0' }}>\n\n            <h2>UI2Objc</h2> <h4>generate iOS UI codes</h4>\n\n          </Header>\n          <Content className={'content'} >\n\n            <div className={'area'}>\n              <EditComponent />\n            </div>\n            <div className={'area'}>\n              <PreviewComponent />\n              <SourceCodeComponent />\n            </div>\n          </Content>\n          <Footer>© Realank</Footer>\n        </Layout>\n\n        <Sider width={'5%'} />\n\n      </Layout>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}